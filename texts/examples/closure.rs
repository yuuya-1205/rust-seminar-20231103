fn main() {
    // クロージャ
    //
    // 他の言語ではラムダ、無名関数などと呼ばれたりする。
    // クロージャに具体的な型はない。あるのは３種類のトレイト。
    // 1. FnOnceは、クロージャの環境として知られている内包されたスコープからキャプチャした変数を消費します。
    //    キャプチャした変数を消費するために、定義された際にクロージャはこれらの変数の所有権を奪い、 自身にムーブするのです。
    //    名前のうち、Onceの部分は、 このクロージャは同じ変数の所有権を2回以上奪うことができないという事実を表しているので、1回しか呼ぶことができないのです。
    // 2. FnMutは、可変で値を借用するので、環境を変更することができます。
    // 3. Fnは、環境から値を不変で借用します。
    //
    // これらのトレイトには包含関係がある
    // - FnMutを実装しているクロージャはFnOnceも実装している
    // - Fnを実装しているクロージャはFnMut, FnOnceも実装している

    // 例えば  Option::mapのシグネチャはこうなっている
    //  fn map<U, F>(self, f: F) -> Option<U> where F: FnOnce(T) -> U
    let f = |x: u32| x * 2;
    let s = String::from("Alice");
    let g = move |x: &str| format!("{}{}", s, x);
    println!("{}", g("a"));
    println!("{}", s);
}
